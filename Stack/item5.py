# <<< กฤษฎาจำเป็นต้องเดินทางไกลเข้าไปในป่าเนื่องจากเป็นหลักสูตรของลูกเสือสามัญ แต่กฤษฎาได้หลงทางเข้ามาในป่าลึก
# (เดินยังไงให้หลงครับเนี่ยย - -") หลังจากเดินไปสักพักกฤษฎาก็ได้สังเกตเห็นเลขบนต้นไม้แต่ละต้น ซึ่งเป็นตัวเลขที่แสดง
# ความสูงของต้นไม้แต่ละต้น (มีหน่วยเป็นเมตร) กฤษฎาจึงคิดอะไรสนุกๆทำเพื่อแก้เบื่อโดยการเดินไปเรื่อยๆ และจำความสูงของต้นไม้แต่ละต้น
# และจะหันกลับมามอง ต้นไม้ที่เคยเดินผ่านไป >>>
# **** ด้านบนจะเป็นเนื้อหาของ < วันหนึ่งฉันเดินเข้าป่า version 1 > เผื่อบางคน Random ไม่ได้ครับ

# หลังจากกฤษฎาเดินหลงป่ามาได้สักพักก็ได้ไปเจอเห็ดสีสันสวยงามจึงได้หยิบขึ้นมากิน หลังจากกินเข้าไปทำให้กฤษฎามีอาการแปลกๆเกิดขึ้น
# เนื่องจากเห็ดที่กินเข้าไปเป็นเห็ดพิษ แต่กฤษฎาก็ยังคอยนับความสูงต้นไม้ไปเรื่อยๆเหมือนเดิม ผลข้างเคียงจากเห็ดพิษก็ได้ส่งผลกระทบ
# ต่อการนับต้นไม้ของกฤษฎาเนื่องจากอาการหลอนประสาท ทำให้ต้นไม้ที่มีความสูงเป็นเลขคี่มีการเพิ่มความสูงมา 2 เมตร และต้นไม้เลขคู่
# ลดความสูงไป 1 เมตร ความสูงที่น้อยที่สุดคือ 1 เมตร
# ให้น้องๆเขียนโปรแกรมเพื่อรับความสูงของต้นไม้ที่กฤาฎาได้เดินผ่าน แล้วหาว่าเมื่อกฤษฎาหันหลังกลับมามองจะเห็นต้นไม้กี่ต้น

# อธิบาย Input :  A <Heights>  แสดงถึงความสูงของต้นไม้ , B คือการหันหลังกลับมามอง , S คือการโดนผลกระทบจากเห็ดพิษ
# อธิบาย Test Case แรก : กฤษฎาจะเดินผ่านต้นไม้ความสูง 4 ก่อนแล้วตามด้วย 3 แล้วหันหลังกลับมามองจะเห็นต้นไม้ 2 ต้น
# ต่อมาเดินไปเจอต้นไม้สูง 5 กับ ต้นไม้สูง 8 ตามลำดับ แล้วหันหลังกลับมามองจะเห็นแค่ต้นไม้ต้นเดียว เนื่องจากต้น 8 เมตร
# บังต้นไม้ความสูง  4  3  และ  5
# โดยจะรับประกันว่าจะมีต้นไม้อย่างน้อย 1 ต้นและมีการหันกลับมาอย่างน้อย 1 ครั้ง


class Stack:
    def __init__(self, list=None):
        if list == None:
            self.items = []
        else:
            self.items = list

    def push(self, value):
        self.items.append(value)

    def pop(self):
        return self.items.pop()

    def peek(self):
        return self.items[-1]

    def isEmpty(self):
        return self.items == []

    def size(self):
        return len(self.items)

    def __str__(self):
        s = 'Value in Stack = '
        if self.isEmpty():
            s += 'Empty'
        else:
            for ele in self.items:
                s += str(ele) + ' '
        return s


S = Stack()
S2 = Stack()
inp = input('Enter Input : ').split(',')

for i in inp:
    i = i.split()

    if i[0] == 'A':
        if S.isEmpty():
            S.push(i[1])
        else:
            for j in range(S.size()):
                if int(i[1]) >= int(S.peek()):
                    S.pop()
            S.push(i[1])
    elif i[0] == 'B':
        if S.isEmpty():
            print('0')
        else:
            print(S.size())
    elif i[0] == 'S':
        temp = []
        for j in range(S.size()):
            h = int(S.pop())
            if h % 2 == 1:
                h += 2
            else:
                h -= 1
            temp.append(str(h))
        temp.reverse()
        for k in temp:
            S2.push(k)
            if not S.isEmpty() and int(k) >= int(S.peek()):
                S.pop()
            S.push(k)


# Testcase :

# Enter Input : A 4,A 3,B,S,B,A 5,A 6,B,S,B
# 2
# 1
# 1
# 2

# Enter Input : A 3,A 4,B,S,S,S,S,S,B
# 1
# 2